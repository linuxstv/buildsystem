--- a/mksquashfs.c.org
+++ b/mksquashfs.c
@@ -49,6 +49,7 @@
 #include <regex.h>
 #include <fnmatch.h>
 #include <sys/wait.h>
+#include <sys/sysmacros.h>
 
 #ifndef linux
 #define __BYTE_ORDER BYTE_ORDER
@@ -1351,49 +1352,49 @@
 	}
 	else if(type == SQUASHFS_CHRDEV_TYPE || type == SQUASHFS_BLKDEV_TYPE) {
 		struct squashfs_dev_inode_header *dev = &inode_header.dev;
-		unsigned int major = major(buf->st_rdev);
-		unsigned int minor = minor(buf->st_rdev);
+		unsigned int _major = major(buf->st_rdev);
+		unsigned int _minor = minor(buf->st_rdev);
 
-		if(major > 0xfff) {
+		if(_major > 0xfff) {
 			ERROR("Major %d out of range in device node %s, "
-				"truncating to %d\n", major, filename,
-				major & 0xfff);
-			major &= 0xfff;
+				"truncating to %d\n", _major, filename,
+				_major & 0xfff);
+			_major &= 0xfff;
 		}
-		if(minor > 0xfffff) {
+		if(_minor > 0xfffff) {
 			ERROR("Minor %d out of range in device node %s, "
-				"truncating to %d\n", minor, filename,
-				minor & 0xfffff);
-			minor &= 0xfffff;
+				"truncating to %d\n", _minor, filename,
+				_minor & 0xfffff);
+			_minor &= 0xfffff;
 		}
 		inode = get_inode(sizeof(*dev));
 		dev->nlink = nlink;
-		dev->rdev = (major << 8) | (minor & 0xff) |
-				((minor & ~0xff) << 12);
+		dev->rdev = (_major << 8) | (_minor & 0xff) |
+				((_minor & ~0xff) << 12);
 		SQUASHFS_SWAP_DEV_INODE_HEADER(dev, inode);
 		TRACE("Device inode, rdev 0x%x, nlink %d\n", dev->rdev, nlink);
 	}
 	else if(type == SQUASHFS_LCHRDEV_TYPE || type == SQUASHFS_LBLKDEV_TYPE) {
 		struct squashfs_ldev_inode_header *dev = &inode_header.ldev;
-		unsigned int major = major(buf->st_rdev);
-		unsigned int minor = minor(buf->st_rdev);
+		unsigned int _major = major(buf->st_rdev);
+		unsigned int _minor = minor(buf->st_rdev);
 
-		if(major > 0xfff) {
+		if(_major > 0xfff) {
 			ERROR("Major %d out of range in device node %s, "
-				"truncating to %d\n", major, filename,
-				major & 0xfff);
-			major &= 0xfff;
+				"truncating to %d\n", _major, filename,
+				_major & 0xfff);
+			_major &= 0xfff;
 		}
-		if(minor > 0xfffff) {
+		if(_minor > 0xfffff) {
 			ERROR("Minor %d out of range in device node %s, "
-				"truncating to %d\n", minor, filename,
-				minor & 0xfffff);
-			minor &= 0xfffff;
+				"truncating to %d\n", _minor, filename,
+				_minor & 0xfffff);
+			_minor &= 0xfffff;
 		}
 		inode = get_inode(sizeof(*dev));
 		dev->nlink = nlink;
-		dev->rdev = (major << 8) | (minor & 0xff) |
-				((minor & ~0xff) << 12);
+		dev->rdev = (_major << 8) | (_minor & 0xff) |
+				((_minor & ~0xff) << 12);
 		dev->xattr = xattr;
 		SQUASHFS_SWAP_LDEV_INODE_HEADER(dev, inode);
 		TRACE("Device inode, rdev 0x%x, nlink %d\n", dev->rdev, nlink);

