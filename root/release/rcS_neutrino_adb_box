#!/bin/sh
#Version 1901027.1

echo "ADB ITI-5800S(X) Neutrino"

MODDIR=/lib/modules
insmod $MODDIR/e2_proc.ko

#if [ -e $MODDIR/cpu_frequ.ko ]; then
#  insmod $MODDIR/cpu_frequ.ko
#  sleep 2
#  echo 22802 > /proc/cpu_frequ/pll0_ndiv_mdiv  # 267 MHz = 22802
#  echo 22793 > /proc/cpu_frequ/pll1_ndiv_mdiv  # 267 MHz = 22793
#fi

echo "[rcS] Init frontpanel"
insmod $MODDIR/adb_5800_fp.ko #paramDebug=10
insmod $MODDIR/simu_button.ko

#boxtype=`cat /proc/stb/info/adb_variant` # TODO: fix, does not work
boxtype=bsla
echo "[rcS] boxtype: $boxtype"
echo "$boxtype" > /etc/boxtype

if [ -e /var/etc/.firstboot ]; then
   echo "WAIT 1st start" >/dev/vfd
   echo "[rcS] WAIT 1st start"
   rm /var/etc/.firstboot
   sleep 1
   touch /dev/.devfsd
else
   if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
      echo "Ld10" > /dev/vfd
   else
      echo "LOAD 10" > /dev/vfd
   fi
   echo "[rcS] Start (LOAD 10)"
fi

/etc/init.d/mountvirtfs start

# Start automounter with umount timeout of 5 seconds
echo "[rcS] Starting automounter"
/etc/init.d/autofs start

echo "[rcS] Starting DEBUG Interface"
/etc/init.d/mountall start
/etc/init.d/hostname start

echo -n "[rcS] Starting telnetd"
/usr/sbin/telnetd -l /bin/autologin
echo "with autologin"

echo "[rcS] Init stmfb (LOAD 9)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 9" > /dev/vfd
else
   echo "LOAD 9" > /dev/vfd
fi
insmod $MODDIR/stmcore-display-stx7100.ko
   insmod $MODDIR/stmfb.ko display0=1280x720-32@50:16m::pal:rgb:rgb display1=720x576i-32@50:1m::pal:cvbs:rgb

echo "[rcS] Loading modules"

if [ ! -e /lib/firmware/audio.elf ] || [ ! -e /lib/firmware/video.elf ]; then
   echo "[rcS] Firmware(s) missing!"
   echo "FW MISSING!" > /dev/vfd
   sleep 5
fi

echo "[rcS] Load audio firmware (LOAD 8)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 8" > /dev/vfd
else
   echo "LOAD 8" > /dev/vfd
fi
/bin/ustslave /dev/st231-1 /lib/firmware/audio.elf > /dev/null

echo "[rcS] Load video firmware (LOAD 7)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 7" > /dev/vfd
else
   echo "LOAD 7" > /dev/vfd
fi
/bin/ustslave /dev/st231-0 /lib/firmware/video.elf > /dev/null

echo "[rcS] Init embx (LOAD 6)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 6" > /dev/vfd
else
   echo "LOAD 6" > /dev/vfd
fi
insmod $MODDIR/embxshell.ko
insmod $MODDIR/embxmailbox.ko mailbox0=0xb9211000:136:set2 mailbox1=0xb9212000:137:set2
insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:1024:0xa4000000:0x10000000
insmod $MODDIR/mme_host.ko transport0=shm
   
echo "[rcS] Init AVS (LOAD 5)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 5" > /dev/vfd
else
   echo "LOAD 5" > /dev/vfd
fi
if [ $boxtype == 'bxzb' ]; then
   insmod $MODDIR/avs.ko type=fake_avs
else
   insmod $MODDIR/avs.ko type=stv6412
fi

player=`cat /proc/stb/player/version | awk '{ print substr( $0, length($0) - 2, length($0) ) }'`
echo "[rcS] Init player $player (LOAD 4)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 4" > /dev/vfd
else
   echo "LOAD 4" > /dev/vfd
fi
insmod $MODDIR/mmelog.ko
insmod $MODDIR/mpeg2hw.ko mmeName=MPEG2_TRANSFORMER0;
insmod $MODDIR/ksound.ko
insmod $MODDIR/p2div64.ko
insmod $MODDIR/stm_v4l2.ko
insmod $MODDIR/pseudocard.ko

echo "[rcS] Init frontend(s)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "[rcS] init frontends (single tuner)"
   insmod $MODDIR/fe-core.ko
else
   echo "[rcS] init frontends (twin tuner)"
   if [ $boxtype == 'bsla' ]; then
      insmod $MODDIR/fe-core-twin1.ko
   else
      insmod $MODDIR/fe-core-twin2.ko paramDebug=100
   fi
fi

echo "[rcS] Init CI & cardreader"
insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
if [ $? -ne 0 ]; then
   insmod $MODDIR/pti.ko
   echo "[rcS] Simple pti"
else
   echo "[rcS] Full feature pti"
fi
insmod $MODDIR/stm_monitor.ko
insmod $MODDIR/stmsysfs.ko
if [ $boxtype == 'bzzb' ]; then
   insmod $MODDIR/stmdvb.ko TSIS_mode=serial NIMS=twin
elif [ $boxtype == 'bsla' ]; then
   insmod $MODDIR/stmdvb.ko TSIS_mode=parallel NIMS=twin
else
   insmod $MODDIR/stmdvb.ko TSIS_mode=parallel NIMS=single
fi

echo "[rcS] Init player2 (LOAD 3)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 3" > /dev/vfd
else
   echo "LOAD 3" > /dev/vfd
fi
insmod $MODDIR/player2.ko
insmod $MODDIR/sth264pp.ko
insmod $MODDIR/stmalloc.ko
insmod $MODDIR/platform.ko
insmod $MODDIR/bpamem.ko
insmod $MODDIR/smartcard.ko

#/usr/local/bin/dvbtest -4 -f l /var/boot/bootlogo.mvi

if [ -e $MODDIR/cec_ctrl.ko ];then
   echo "[rcS] Init HDMI-CEC"
   insmod $MODDIR/cec_ctrl.ko
fi

if [ -e $MODDIR/exportfs.ko ]; then
   echo "[rcS] Init exportfs"
   insmod $MODDIR/exportfs.ko
fi

if [ -e $MODDIR/cifs.ko ]; then
echo "[rcS] Init CIFS support"
   insmod $MODDIR/cifs.ko
fi

if [ -e $MODDIR/ntfs.ko ]; then
   echo "[rcS] Init NTFS support"
   insmod $MODDIR/ntfs.ko
fi

if [ -e $MODDIR/tun.ko ]; then
echo "[rcS] Init tun support"
   insmod $MODDIR/tun.ko
fi

if [ -e $MODDIR/usbserial.ko ]; then
   insmod $MODDIR/usbserial.ko
   if [ -e $MODDIR/ftdi.ko ]; then
   echo "[rcS] Init FTDI USB serial support"
      insmod $MODDIR/ftdi.ko
   fi
   if [ -e $MODDIR/pl2303.ko ]; then
   echo "[rcS] Init PL2303 USB serial support"
      insmod $MODDIR/pl2303.ko
   fi
fi

echo "[rcS] Init remote control (LOAD 2)"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 2" > /dev/vfd
else
   echo "LOAD 2" > /dev/vfd
fi
mkdir -p /var/run/lirc
/usr/bin/lircd
/bin/evremote2 &

# OpenSSh daemon
if [ -e /etc/init.d/sshd ]; then
   (sleep 30; /etc/init.d/sshd start) &
fi

# Module aus modules.extra laden
[ -f /var/etc/modules.extra ] && eval `sed -e 's/#.*//' -e '/^\s*$/d' -e 's/^\(.*\)/insmod \0;/' < /var/etc/modules.extra`

NFS=`grep -c nfs /proc/cmdline`
if [ "$NFS" -eq "1" ]; then
   echo "[rcS] Booting from nfs, don't set network"
else
   if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=`grep -c dhcp /etc/network/interfaces`
      if [ "$DHCP" -eq "1" ]; then
         echo "[rcS] Starting DHCP"
         /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start
   fi
fi

if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "Ld 1" > /dev/vfd
else
   echo "LOAD 1" > /dev/vfd
fi
# Try and synchronise time
echo "[rcS] Set internet time"
ntpd -n -p 0.europe.pool.ntp.org -q
/bin/fp_control -sst

echo "[rcS] Init portmap & ftp"
/etc/init.d/portmap start
/etc/init.d/vsftpd start
/usr/sbin/inetd

# Do own extras
if [ -e /etc/ownscript.sh ]; then
   /etc/ownscript.sh &
fi

echo "[rcS] Loading Neutrino"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "LdNE" > /dev/vfd
else
   echo "Loading Neutrino" > /dev/vfd
fi
until false
do
   echo "[rcS] Starting Neutrino->"
   /usr/bin/neutrino
   rtv=$?
   echo "neutrino ended <- RTV: " $rtv
   case "$rtv" in
      0) echo "[rcS] SHUTDOWN"
          if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
           echo "Shdn" > /dev/vfd
         else
            echo "SHUTDOWN" > /dev/vfd
         fi
         init 0;;
      1) echo "[rcS] REBOOT"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
           echo "Rebt" > /dev/vfd
         else
            echo "REBOOT" > /dev/vfd
         fi
         init 6;;
      3) echo "[rcS] RESTART"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
           echo "ReSt" > /dev/vfd
         else
            echo "RESTART" > /dev/vfd
         fi;;
      *) echo "[rcS] Neutrino ERROR"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
           echo "NeEr" > /dev/vfd
         else
            echo "Neutrino ERROR" > /dev/vfd
         fi
         init 6;;
      esac
   done
fi

#never reached
echo "REBOOT" > /dev/vfd
echo "[rcS] REBOOT ADB_BOX"
init 6
