#!/bin/sh
#Version 201020.1

echo "[rcS] Start"
echo "Pace HDS7241/91 Neutrino"

MODDIR=/lib/modules

insmod $MODDIR/e2_proc.ko

ho "[rcS] Init frontpanel"
insmod $MODDIR/pace_7241_fp.ko #paramDebug=100
insmod $MODDIR/simu_button.ko

if [ -e /var/etc/.firstboot ]; then
   echo "Wait 1 min." > /dev/vfd
   echo "[rcS] WAIT 1 minute"
   rm /var/etc/.firstboot
   sleep 1
   touch /dev/.devfsd
else
   echo "Load 10" > /dev/vfd
   echo "[rcS] Start (LOAD 10)"
fi

/etc/init.d/mountvirtfs start

# Start automounter with umount timeout of 5 seconds
if [ -e $MODDIR/autofs4.ko ]; then
   insmod $MODDIR/autofs4.ko
fi
if [ -e /etc/init.d/automount ]; then
   /usr/sbin/automount --timeout=5 /autofs file /etc/auto.usb
fi

echo "[rcS] Starting DEBUG Interface"
/etc/init.d/mountall start
/etc/init.d/hostname start

echo "[rcS] Starting telnetd"
/usr/sbin/telnetd -l /bin/autologin

echo "[rcS] Init stmfb (LOAD 9)"
echo "Load 9" > /dev/vfd
insmod $MODDIR/stmcore-display-sti7105.ko

insmod $MODDIR/stmfb.ko display0=1280x720-32@50:12m:0m:pal:rgb:rgb

echo "[rcS] Loading modules"

if [ ! -e /lib/firmware/audio.elf ] || [ ! -e /lib/firmware/video.elf ]; then
   echo "[rcS] Firmware(s) missing!"
   echo "FW MISSING!" > /dev/vfd
   sleep 5
fi

echo "[rcS] Load audio firmware (LOAD 8)"
echo "Load 8" > /dev/vfd
/bin/dd if=/dev/zero of=/dev/st231-0 bs=1024 count=4096 2> /dev/null
/bin/ustslave /dev/st231-0 /lib/firmware/video.elf > /dev/null

echo "[rcS] Load video firmware (LOAD 7)"
echo "Load 7" > /dev/vfd
/bin/dd if=/dev/zero of=/dev/st231-1 bs=1024 count=4096 2> /dev/null
/bin/ustslave /dev/st231-1 /lib/firmware/audio.elf > /dev/null

echo "[rcS] Init embx (LOAD 6)"
echo "Load 6" > /dev/vfd
insmod $MODDIR/embxshell.ko
insmod $MODDIR/embxmailbox.ko mailbox0=0xfe211000:136:set2 mailbox1=0xfe212000:0
insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:512:0x40000000:0x10000000
insmod $MODDIR/mme_host.ko transport0=shm

echo "[rcS] Init AVS (LOAD 5)"
echo "Load 5" > /dev/vfd
insmod $MODDIR/avs.ko type=avs_none

player=`cat /proc/stb/player/version | awk '{ print substr( $0, length($0) - 2, length($0) ) }'`
echo "[rcS] Init player $player (LOAD 4)"
echo "Load 4" > /dev/vfd
insmod $MODDIR/mmelog.ko
insmod $MODDIR/ksound.ko
insmod $MODDIR/p2div64.ko
insmod $MODDIR/stm_v4l2.ko
insmod $MODDIR/pseudocard.ko

echo "[rcS] Init frontends"
insmod $MODDIR/fe-core.ko #paramDebug=100

echo "[rcS] Init CI & cardreader"
insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
if [ $? -ne 0 ]; then
   insmod $MODDIR/pti.ko
   echo "[rcS] Simple pti"
else
   echo "[rcS] Full feature pti"
fi
insmod $MODDIR/stm_monitor.ko
insmod $MODDIR/stmsysfs.ko
insmod $MODDIR/stmdvb.ko

echo "[rcS] Init player2 (LOAD 3)"
echo "Load 3" > /dev/vfd
insmod $MODDIR/player2.ko
insmod $MODDIR/sth264pp.ko
insmod $MODDIR/stmalloc.ko
insmod $MODDIR/platform.ko
insmod $MODDIR/silencegen.ko

insmod $MODDIR/bpamem.ko
mknod /dev/bpamem c 153 0

insmod $MODDIR/fan_ctrl.ko

if [ -e $MODDIR/cec.ko ]; then
   echo "[rcS] Init HDMI-CEC"
   insmod $MODDIR/cec.ko activemode=1
fi

#if [ -e /boot/neutrinologo.mvi ]; then
#   showiframe -p /boot/neutrinologo.mvi &
#fi

stfbcontrol a 0

if [ -e $MODDIR/exportfs.ko ]; then
   echo "[rcS] Init exportfs"
   insmod $MODDIR/exportfs.ko
fi

if [ -e $MODDIR/cifs.ko ]; then
   echo "[rcS] Init CIFS support"
   insmod $MODDIR/cifs.ko
fi

if [ -e $MODDIR/ntfs.ko ]; then
   echo "[rcS] Init NTFS support"
   insmod $MODDIR/ntfs.ko
fi

if [ -e $MODDIR/tun.ko ]; then
   echo "[rcS] Init tun support"
   insmod $MODDIR/tun.ko
fi

if [ -e $MODDIR/usbserial.ko ]; then
   insmod $MODDIR/usbserial.ko
   if [ -e $MODDIR/ftdi.ko ]; then
      echo "[rcS] Init FTDI USB serial support"
      insmod $MODDIR/ftdi.ko
   fi
   if [ -e $MODDIR/pl2303.ko ]; then
      echo "[rcS] Init PL2303 USB serial support"
      insmod $MODDIR/pl2303.ko
   fi
fi

echo "[rcS] Init remote control (LOAD 2)"
echo "Load 2" > /dev/vfd
mkdir -p /var/run/lirc
/usr/bin/lircd
/bin/evremote2 &

stfbcontrol a 255

echo "[rcS] Init portmap & ftp (LOAD 1)"
echo "LD 1" >/dev/vfd
/etc/init.d/portmap start
/etc/init.d/vsftpd start
/usr/sbin/inetd

NFS=`grep -c nfs /proc/cmdline`
if [ "$NFS" -eq "1" ]; then
   echo "[rcS] Booting from NFS, do not set network"
else
   if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=`grep -c 'iface eth0 inet dhcp' /etc/network/interfaces`
      if [ "$DHCP" -eq "1" ]; then
         echo "[rcS] Starting DHCP"
         /etc/init.d/udhcpc start
      else
         ip=$(echo `grep address /etc/network/interfaces` | sed 's/address //g')
         echo "[rcS] Using fixed IP $ip"
      fi
      /etc/init.d/networking start
   fi
fi
#Allow network to wake up and initialize
sleep 2
#Show IP address on frontpanel
#ip=`ifconfig eth0 | sed -n '/inet addr/s/.*addr.\([^ ]*\) .*/\1/p'`
#echo "IP $ip" > /dev/vfd
#sleep 3

#wlan=rtl8188cu
if [ ! $wlan ] || [ ! -e $MODDIR/$wlan.ko ]; then
   echo "No WLAN"
else
   insmod $MODDIR/$wlan.ko
   echo "[rcS] $wlan WLAN"
#   echo "$wlan WLAN" > /dev/vfd
#   sleep 3
fi

# Handle SWAPPART and RECORD labels and USB devices
if [ -e /usr/sbin/amount.sh ]; then
   (sleep 20; /usr/sbin/amount.sh) &
fi

# Try and synchronise time
echo "[rcS] Set internet time"
if [ -h /usr/sbin/ntpd ]; then
   (/usr/sbin/ntpd -n -p 0.europe.pool.ntp.org -q; /bin/fp_control -sst) &
fi

# Do own extras
if [ -e /etc/ownscript.sh ]; then
   /etc/ownscript.sh &
fi

echo "[rcS] Loading Neutrino"
echo "Loading Neutrino" > /dev/vfd

until false
do
   killall -9 showiframe
   echo "[rcS] Starting neutrino ->"
   /usr/bin/neutrino
   rtv=$?
   echo "[rcS] Neutrino ended <- return value: " $rtv
   case "$rtv" in
      0) echo "SHUTDOWN"
         echo "Shdn" > /dev/vfd
         init 0;;
      1) echo "REBOOT"
         echo "rebt" > /dev/vfd
         init 6;;
      3) echo "RESTART"
         echo "reSt" > /dev/vfd
         ;;
      *) echo "ERROR"
         echo "Err " > /dev/vfd
         init 6;;
   esac
done

#never reached
echo "[rcS] REBOOT PACE7241"
echo "REBOOT Pace7241" > /dev/vfd
sync
init 6
