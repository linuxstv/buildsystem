#!/bin/sh
#Version 191113.1

echo "[rcS] Start"
echo "CubeRevo 9500HD Neutrino"

MODDIR=/lib/modules

insmod $MODDIR/e2_proc.ko

echo "[rcS] Init frontpanel"
insmod $MODDIR/micom.ko

if [ -e /var/etc/.firstboot ]; then
   echo "WAIT 3 minutes" > /dev/vfd
   echo "[rcS] WAIT 3 min"
   rm /var/etc/.firstboot
   sleep 1
   touch /dev/.devfsd
else
   echo "Load 10" > /dev/vfd
   echo "[rcS] LOAD 10"
fi

/etc/init.d/mountvirtfs start

if [ -e $MODDIR/autofs4.ko ]; then
   insmod $MODDIR/autofs4.ko
fi
# Start automounter with umount timeout of 5 seconds
if [ -e /etc/init.d/automount ]; then
   /usr/sbin/automount --timeout=5 /autofs file /etc/auto.usb
fi

echo "[rcS] Starting DEBUG Interface"
/etc/init.d/mountall start
/etc/init.d/hostname start

#if [ -e /dev/ttyAS1 ]; then
#   rm -f /dev/ttyAS1
#fi

echo "[rcS] Init stmfb (LOAD 9)"
echo "Load 9" > /dev/vfd
insmod $MODDIR/stmcore-display-stx7109c3.ko

/bin/eeprom tvmode
TVMODE=$?
case "$TVMODE" in
   0) echo "[rcS] Video mode: SD-PAL (576i)"
      insmod $MODDIR/stmfb.ko display0=720x576-32@50i:12m:pal:rgb:yuv;;
   1) echo "[rcS] Video mode: SD-NTSC (480i)"
      insmod $MODDIR/stmfb.ko display0=720x480-32@60i:12m:ntsc-m:rgb:yuv;;
   2) echo "[rcS] Video mode: 720p-50"
      insmod $MODDIR/stmfb.ko display0=1280x720-32@50:12m:pal:rgb:yuv;;
   3) echo "[rcS] Video mode: 720p-60"
      insmod $MODDIR/stmfb.ko display0=1280x720-32@60:12m:ntsc-m:rgb:yuv;;
   4) echo "[rcS] Video mode: 1080i-50"
      insmod $MODDIR/stmfb.ko display0=1920x1080-32@50i:12m:pal:rgb:yuv;;
   5) echo "[rcS] Video mode: 1080i-60"
      insmod $MODDIR/stmfb.ko display0=1920x1080-32@60i:12m:ntsc-m:rgb:yuv;;
   *) echo "[rcS] Video mode: use default 720p-50"
      insmod $MODDIR/stmfb.ko display0=1280x720-32@50:12m:pal:rgb:yuv;;
esac

echo "[rcS] Loading modules"

if [ ! -e /lib/firmware/audio.elf ] || [ ! -e /lib/firmware/video.elf ]; then
   echo "[rcS] Firmware(s) missing!"
   echo "FW MISSING!" > /dev/vfd
   sleep 5
fi

echo "[rcS] Load video firmware (LOAD 8)"
echo "Load 8" > /dev/vfd
/bin/ustslave /dev/st231-0 /lib/firmware/video.elf > /dev/null

echo "[rcS] Load audio firmware (LOAD 7)"
echo "Load 7" > /dev/vfd
/bin/ustslave /dev/st231-1 /lib/firmware/audio.elf > /dev/null

echo "[rcS] Init embx (LOAD 6)"
echo "Load 6" > /dev/vfd
insmod $MODDIR/embxshell.ko
insmod $MODDIR/embxmailbox.ko mailbox0=0xb9211000:136:set2 mailbox1=0xb9212000:0 ;
insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:512:0xa4000000:0x10000000 ;
insmod $MODDIR/mme_host.ko transport0=shm

echo "[rcS] Init AVS (LOAD 5)"
echo "Load 5" > /dev/vfd
insmod $MODDIR/avs.ko type=stv6412

echo "[rcS] Init player (LOAD 4)"
echo "Load 4" > /dev/vfd
insmod $MODDIR/mmelog.ko
insmod $MODDIR/mpeg2hw.ko mmeName=MPEG2_TRANSFORMER1
insmod $MODDIR/ksound.ko
insmod $MODDIR/p2div64.ko
insmod $MODDIR/stm_v4l2.ko
#insmod $MODDIR/stmvout.ko
#insmod $MODDIR/stmvbi.ko

insmod $MODDIR/pseudocard.ko

echo "[rcS] Init frontend"
insmod $MODDIR/frontend_platform.ko
insmod $MODDIR/socket.ko
insmod $MODDIR/lnbh221.ko
insmod $MODDIR/lnb_pio.ko
# DVB-T
if [ -f $MODDIR/dvb-pll.ko ]; then
   insmod $MODDIR/dvb-pll.ko
fi
if [ -f $MODDIR/zl10353.ko ]; then
   insmod $MODDIR/zl10353.ko
fi
# DVB-C
if [ -f $MODDIR/tda10023.ko ]; then
   insmod $MODDIR/tda10023.ko
fi
# DVB-S(2)
if [ -f $MODDIR/cx24116.ko ]; then
   insmod $MODDIR/cx24116.ko
fi
if [ -f $MODDIR/stv090x.ko ]; then
   insmod $MODDIR/stv090x.ko
fi
# DVB-S
if [ -f $MODDIR/stv0288.ko ]; then
   insmod $MODDIR/stv0288.ko
fi

insmod $MODDIR/starci.ko
insmod $MODDIR/smartcard.ko

insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
if [ $? -ne 0 ]; then
   insmod $MODDIR/pti.ko
   echo "[rcS] Simple pti"
else
   echo "[rcS] Full feature pti"
fi

insmod $MODDIR/stm_monitor.ko
insmod $MODDIR/stmsysfs.ko
insmod $MODDIR/stmdvb.ko

echo "[rcS] Init player2 (LOAD 3)"
echo "Load 3" > /dev/vfd
insmod $MODDIR/player2.ko discardlateframe=0
insmod $MODDIR/sth264pp.ko
insmod $MODDIR/stmalloc.ko
insmod $MODDIR/platform.ko
insmod $MODDIR/silencegen.ko

insmod $MODDIR/bpamem.ko
#mknod /dev/bpamem c 153 0

if [ -e $MODDIR/exportfs.ko ]; then
   insmod $MODDIR/exportfs.ko
fi
if [ -e $MODDIR/cifs.ko ]; then
   insmod $MODDIR/cifs.ko
fi
if [ -e $MODDIR/ntfs.ko ]; then
   insmod $MODDIR/ntfs.ko
fi
if [ -e $MODDIR/tun.ko ]; then
   insmod $MODDIR/tun.ko
fi
if [ -e $MODDIR/usbserial.ko ]; then
   insmod $MODDIR/usbserial.ko
   if [ -e $MODDIR/ftdi.ko ]; then
      insmod $MODDIR/ftdi.ko
   fi
   if [ -e $MODDIR/pl2303.ko ]; then
      insmod $MODDIR/pl2303.ko
   fi
fi
echo "[rcS] Init frontpanel keyboard (LOAD 2)"
echo "Load 2" > /dev/vfd
#insmod $MODDIR/boxtype.ko
insmod $MODDIR/simu_button.ko

if [ -e /boot/neutrinologo.mvi ]; then
   showiframe -p /boot/neutrinologo.mvi &
fi
stfbcontrol a 0

echo "[rcS] Init remote control"
/bin/evremote2 10 140 &

# Load modules from /var/etc/modules.extra
echo "[rcS] Load extra modules"
[ -f /var/etc/modules.extra ] && eval `sed -e 's/#.*//' -e '/^\s*$/d' -e 's/^\(.*\)/insmod \0;/' < /var/etc/modules.extra`

#wlan=rtl8188cu
if [ ! $wlan ] || [ ! -e $MODDIR/$wlan.ko ]; then
   echo "No WLAN"
else
   insmod $MODDIR/$wlan.ko
   echo "$wlan WLAN"
#   echo "$wlan WLAN" > /dev/vfd
#   sleep 3
fi

echo "[rcS] Initialize network (LOAD 1)"
echo "Load 1" >/dev/vfd
NFS=`grep -c nfs /proc/cmdline`
if [ "$NFS" -eq "1" ]; then
   echo "[rcS] Booting from nfs, do not set network"
else
   if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=`grep -c 'iface eth0 inet dhcp' /etc/network/interfaces`
      if [ "$DHCP" -eq "1" ]; then
         echo "[rcS] Starting DHCP on eth0"
         /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start
   fi
fi

echo "[rcS] Starting telnetd"
/usr/sbin/telnetd -l /bin/autologin

echo "[rcS] Init portmap & ftp"
/etc/init.d/portmap start
/etc/init.d/vsftpd start
/usr/sbin/inetd

echo "[rcS] Set internet time"
(ntpd -n -p 0.europe.pool.ntp.org -q; /bin/fp_control -sst)

stfbcontrol a 255
/bin/fp_control -l 0 1 #power LED on

echo "[rcS] LOADING neutrino"
echo "Loading Neutrino" > /dev/vfd

until false
do
   if [ -e /boot/neutrinologo.mvi ]; then
      killall -9 showiframe
   fi
   echo "[rcS] Starting neutrino"
   /usr/bin/neutrino
   rtv=$?
   echo "[rcS] Neutrino ended <- return value: " $rtv
   case "$rtv" in
      0) echo "SHUTDOWN"
         echo "Shutdown" > /dev/vfd
         init 0;;
      1) echo "REBOOT"
         echo "Reboot" > /dev/vfd
         init 6;;
      3) echo "RESTART"
         echo "Restart" > /dev/vfd
         ;;
      *) echo "ERROR"
         echo "Error" > /dev/vfd
         init 6;;
   esac
done

#never reached
/bin/fp_control -t "REBOOT CubeRevo 9500HD"
echo "[rcS] Reboot Cuberevo 9500HD"
init 6
