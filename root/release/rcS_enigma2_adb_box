#!/bin/sh
#Version 200722.1

echo "[rcS] Start"
echo "ADB ITI-5800S(X) Enigma2"

MODDIR=/lib/modules

insmod $MODDIR/e2_proc.ko

#if [ -e $MODDIR/cpu_frequ.ko ]; then
#   insmod $MODDIR/cpu_frequ.ko
#fi

echo "[rcS] Init frontpanel"
vfd_on=`cat /etc/enigma2/settings | grep vfdicon.vfd_enable | cut -d "=" -f2`
if [ "$vfd_on" == "true" ]; then
   insmod $MODDIR/adb_5800_fp.ko vfd_display=1 #paramDebug=100
else
   insmod $MODDIR/adb_5800_fp.ko #paramDebug=100
fi
insmod $MODDIR/simu_button.ko


if [ -e /var/etc/.firstboot ]; then
   echo "config.plugins.remotecontroltype.rctype=15" >> /etc/enigma2/settings
   echo "WAIT 1st start" >/dev/vfd
   echo "[rcS] WAIT 1st start"
   rm /var/etc/.firstboot
   sleep 1
   touch /dev/.devfsd
else
   echo "LD10" > /dev/vfd
   echo "[rcS] Start (LOAD 10)"
fi

/etc/init.d/mountvirtfs start

# Start automounter with umount timeout of 5 seconds
echo "[rcS] Starting automounter"
/etc/init.d/autofs start

echo "[rcS] Starting DEBUG Interface"
/etc/init.d/mountall start
/etc/init.d/hostname start

echo -n "[rcS] Starting telnetd "
autologin=`cat /etc/enigma2/settings | grep systemoptions.autologin | cut -d "=" -f2`
if [ ! $autologin ]; then
   /usr/sbin/telnetd -l /bin/autologin
   echo "with autologin"
else
   /usr/sbin/telnetd -l /bin/login
   echo "with normal login"
fi

# Set clock speed
#if [ -e $MODDIR/cpu_frequ.ko ]; then
#   echo 22802 > /proc/cpu_frequ/pll0_ndiv_mdiv  # 267 MHz = 22802
#   echo 22793 > /proc/cpu_frequ/pll1_ndiv_mdiv  # 267 MHz = 22793
#fi

# Set box type
boxtype=`cat /proc/stb/info/adb_variant`
echo "[rcS] boxtype: $boxtype"
echo "$boxtype" > /etc/boxtype
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   LD_PREFIX="Ld"
else
   LD_PREFIX="LOAD"
fi

echo "[rcS] Init stmfb (LOAD 9)"
echo "$LD_PREFIX 9" > /dev/vfd
insmod $MODDIR/stmcore-display-stx7100.ko

if grep -q "config.av.videoport=Scart" /etc/enigma2/settings; then
   insmod $MODDIR/stmfb.ko display0=720x576i-32@50i:12m:0m:pal:yuv:rgb
   VIDEO=scart
else
   insmod $MODDIR/stmfb.ko display0=1280x720-32@50:12m:0m:pal:rgb:rgb
   VIDEO=hdmi_component
fi
echo "[rcS] Loading modules"

if [ ! -e /boot/audio.elf ] || [ ! -e /boot/video.elf ]; then
   echo "[rcS] Firmware(s) missing!"
   echo "FW MISSING!" > /dev/vfd
   sleep 5
fi

echo "[rcS] Load audio firmware (LOAD 8)"
echo "$LD_PREFIX 8" > /dev/vfd
/bin/ustslave /dev/st231-1 /boot/audio.elf > /dev/null

echo "[rcS] Load video firmware (LOAD 7)"
echo "$LD_PREFIX 7" > /dev/vfd
/bin/ustslave /dev/st231-0 /boot/video.elf > /dev/null

echo "[rcS] Init embx (LOAD 6)"
echo "$LD_PREFIX 6" > /dev/vfd
insmod $MODDIR/embxshell.ko
insmod $MODDIR/embxmailbox.ko mailbox0=0xb9211000:136:set2 mailbox1=0xb9212000:0
insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:16:16:0:1024:0xa4000000:0x10000000
insmod $MODDIR/mme_host.ko transport0=shm

echo "[rcS] Init AVS (LOAD 5)"
echo "$LD_PREFIX 5" > /dev/vfd
if [ $boxtype == 'bxzb' ]; then
   insmod $MODDIR/avs.ko type=fake_avs
else
   insmod $MODDIR/avs.ko type=stv6412
fi

player=`cat /proc/stb/player/version | awk '{ print substr( $0, length($0) - 2, length($0) ) }'`
echo "[rcS] Init player $player (LOAD 4)"
echo "$LD_PREFIX 4" > /dev/vfd
insmod $MODDIR/mmelog.ko
insmod $MODDIR/mpeg2hw.ko mmeName=MPEG2_TRANSFORMER0;
insmod $MODDIR/ksound.ko
insmod $MODDIR/p2div64.ko
insmod $MODDIR/stm_v4l2.ko
insmod $MODDIR/pseudocard.ko

if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "[rcS] Init frontend (single tuner)"
   insmod $MODDIR/fe-core.ko #paramDebug=100
else
   if [ $boxtype == 'bsla' ]; then
      echo "[rcS] Init frontends (twin tuner BSLA)"
      insmod $MODDIR/fe-core-twin1.ko #paramDebug=100
   else
      echo "[rcS] Init frontends (twin tuner BZZB)"
      insmod $MODDIR/fe-core-twin2.ko #paramDebug=100
   fi
fi

echo "[rcS] Init CI & cardreader"
insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
if [ $? -ne 0 ]; then
   insmod $MODDIR/pti.ko
   echo "[rcS] Simple pti"
else
   echo "[rcS] Full feature pti"
fi
insmod $MODDIR/stm_monitor.ko
insmod $MODDIR/stmsysfs.ko
if [ $boxtype == 'bzzb' ]; then
   insmod $MODDIR/stmdvb.ko TSIS_mode=serial NIMS=twin
elif [ $boxtype == 'bsla' ]; then
   insmod $MODDIR/stmdvb.ko TSIS_mode=parallel NIMS=twin
else
   insmod $MODDIR/stmdvb.ko TSIS_mode=parallel NIMS=single
fi

echo "[rcS] Init player2 (LOAD 3)"
echo "$LD_PREFIX 3" > /dev/vfd
insmod $MODDIR/player2.ko
#insmod $MODDIR/player2.ko discardlateframe=0
insmod $MODDIR/sth264pp.ko
insmod $MODDIR/stmalloc.ko
insmod $MODDIR/platform.ko

insmod $MODDIR/bpamem.ko
insmod $MODDIR/smartcard.ko

echo "$boxtype" > /proc/stb/video/switch_type

if [ "$VIDEO" = "scart" ]; then
   echo "scart" > /proc/stb/video/switch
else
   echo "component720p" > /proc/stb/video/switch
fi
echo "[rcS] VIDEO: $VIDEO"

if [ -e /boot/bootlogo.mvi ]; then
   showiframe -p boot/bootlogo.mvi &
fi

stfbcontrol a 0

if [ -e $MODDIR/cec_ctrl.ko ];then
   echo "[rcS] Init HDMI-CEC"
   insmod $MODDIR/cec_ctrl.ko
fi

if [ -e $MODDIR/exportfs.ko ]; then
   echo "[rcS] Init exportfs"
   insmod $MODDIR/exportfs.ko
fi

if [ -e $MODDIR/cifs.ko ]; then
   echo "[rcS] Init CIFS support"
   insmod $MODDIR/cifs.ko
fi

if [ -e $MODDIR/ntfs.ko ]; then
   echo "[rcS] Init NTFS support"
   insmod $MODDIR/ntfs.ko
fi

if [ -e $MODDIR/tun.ko ]; then
   echo "[rcS] Init tun support"
   insmod $MODDIR/tun.ko
fi

if [ -e $MODDIR/usbserial.ko ]; then
   insmod $MODDIR/usbserial.ko
   if [ -e $MODDIR/ftdi.ko ]; then
      echo "[rcS] Init FTDI USB serial support"
      insmod $MODDIR/ftdi.ko
   fi
   if [ -e $MODDIR/pl2303.ko ]; then
      echo "[rcS] Init PL2303 USB serial support"
      insmod $MODDIR/pl2303.ko
   fi
fi

echo "[rcS] Init remote control (LOAD 2)"
echo "$LD_PREFIX 2" > /dev/vfd
mkdir -p /var/run/lirc
/usr/bin/lircd
/bin/evremote2 &

stfbcontrol a 255

NFS=`grep -c nfs /proc/cmdline`
if [ "$NFS" -eq "1" ]; then
   echo "[rcS] Booting from NFS, do not set network"
else
   if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=`grep -c 'iface eth0 inet dhcp' /etc/network/interfaces`
      if [ "$DHCP" -eq "1" ]; then
         echo "[rcS] Starting DHCP"
         /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start
   fi
fi
#Allow network to wake up and initialize
sleep 2
#Show IP address on frontpanel
#ip=`ifconfig eth0 | sed -n '/inet addr/s/.*addr.\([^ ]*\) .*/\1/p'`
#echo "IP $ip" > /dev/vfd
#sleep 3

echo -n "[rcS] Init WLAN: "
wlan=`cat /etc/enigma2/settings | grep systemoptions.wlan | cut -d "=" -f2`
if [ ! $wlan ] || [ ! -e $MODDIR/$wlan.ko ]; then
   echo "None."
else
   insmod $MODDIR/$wlan.ko
   echo "$wlan"
#   echo "$wlan WLAN" > /dev/vfd
#   sleep 3
fi

# Handle SWAPPART and RECORD labels and USB devices
if [ -e /usr/sbin/amount.sh ]; then
   (sleep 20; /usr/sbin/amount.sh) &
fi

echo "[rcS] Apply various E2 settings(LOAD 1)"
echo "$LD_PREFIX 1" > /dev/vfd

# inadyn
inadyn=`cat /etc/enigma2/settings | grep systemoptions.inadyn | cut -d "=" -f2`
if [ ! $inadyn ] || [ ! -e /usr/bin/inadyn ]; then
   echo "[rcS] No inadyn"
else
   if [ -e /usr/bin/inadyn ]; then
      /usr/bin/inadyn &
   fi
fi

# OpenSSh daemon
openssh=`cat /etc/enigma2/settings | grep systemoptions.openssh | cut -d "=" -f2`
if [ ! $openssh ] || [ ! -e /etc/init.d/sshd ]; then
   echo "[rcS] No OpenSSH"
else
   if [ -e /etc/init.d/sshd ]; then
      (sleep 30; /etc/init.d/sshd start) &
   fi
fi

# Enable PKT plugins
if [ ! -e /tmp/reference.dat ] && [ -e /var/bin/reference.dat ]; then
   cp /var/bin/reference.dat /tmp
fi

# Try and synchronise time
echo "[rcS] Set internet time"
ntpd -n -p 0.europe.pool.ntp.org -q
/bin/fp_control -sst

echo "[rcS] Init portmap & ftp"
/etc/init.d/portmap start
/etc/init.d/vsftpd start
/usr/sbin/inetd

# Do own extras
if [ -e /etc/ownscript.sh ]; then
   /etc/ownscript.sh &
fi

echo "[rcS] Loading E2"
if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
   echo "LdE2" > /dev/vfd
else
   echo "Loading E2" > /dev/vfd
fi

until false
do
   echo "[rcS] Entering Enigma2 main loop"
   if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
      showiframe -p /usr/local/share/enigma2/backdrop.mvi &
   fi
   /usr/local/bin/enigma2
   rtv=$?
   echo "[rcS] Enigma2 ended <- return value: " $rtv
   if [ $boxtype == 'bsla' ] || [ $boxtype == 'bzzb' ]; then
      fp_control -i 22 0  # all icons off
   fi
   case "$rtv" in
      0) echo "[rcS] E2 ERROR"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
            echo "E2Er" > /dev/vfd
         else
            echo "E2 ERROR" > /dev/vfd
         fi
         sync
         init 6;;
      1) echo "[rcS] SHUTDOWN"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
            echo "Shdn" > /dev/vfd
         else
            echo "Shutdown" > /dev/vfd
         fi
         if [ -e /usr/local/share/enigma2/shutdown.mvi ]; then
            showiframe -p /usr/local/share/enigma2/shutdown.mvi &
         fi
         sync
         umount -a
         init 0;;
      2) echo "[rcS] REBOOT"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
            echo "REbt" > /dev/vfd
         else
            echo "Reboot" > /dev/vfd
         fi
         sync
         init 6;;
      3) echo "[rcS] E2 RESTART"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
             echo "E2RS" > /dev/vfd
         else
             echo "E2 Restart" > /dev/vfd
         fi
         echo "0" > /proc/progress
         if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
            showiframe -p /usr/local/share/enigma2/backdrop.mvi &
         else
            showiframe -p /boot/bootlogo.mvi &
         fi
         echo -n " ";;
      6) echo "[rcS] E2 DEBUG RESTART"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
            echo "rdbg" > /dev/vfd
         else
            echo "E2 Restart Dbg" > /dev/vfd
         fi
         echo "0" > /proc/progress
         if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
            showiframe -p /usr/local/share/enigma2/backdrop.mvi
         else
            showiframe -p /boot/bootlogo.mvi &
         fi;;
      *) echo "[rcS] ERROR"
         if [ $boxtype == 'bska' ] || [ $boxtype == 'bxzb' ]; then
            echo "Err" > /dev/vfd
         else
            echo "ERROR" > /dev/vfd
         fi
         sync
         echo "0" > /proc/progress
         showiframe -p /boot/bootlogo.mvi &
         init 6;;
   esac
done

#never reached
echo "REBOOT" > /dev/vfd
echo "[rcS] REBOOT ADB_BOX"
sync
reboot -f

